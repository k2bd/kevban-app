[{"/Users/kevin.duff/dev/kevban-board/src/index.tsx":"1","/Users/kevin.duff/dev/kevban-board/src/store/reducer.ts":"2","/Users/kevin.duff/dev/kevban-board/src/App.tsx":"3","/Users/kevin.duff/dev/kevban-board/src/components/Issue.tsx":"4","/Users/kevin.duff/dev/kevban-board/src/store/actionTypes.ts":"5","/Users/kevin.duff/dev/kevban-board/src/store/actionCreators.ts":"6","/Users/kevin.duff/dev/kevban-board/src/components/IssueBoard.tsx":"7","/Users/kevin.duff/dev/kevban-board/src/components/IssueLane.tsx":"8"},{"size":577,"mtime":1607955909409,"results":"9","hashOfConfig":"10"},{"size":2692,"mtime":1607985125195,"results":"11","hashOfConfig":"10"},{"size":681,"mtime":1607982933138,"results":"12","hashOfConfig":"10"},{"size":1900,"mtime":1607985096798,"results":"13","hashOfConfig":"10"},{"size":137,"mtime":1607967248097,"results":"14","hashOfConfig":"10"},{"size":803,"mtime":1607981781390,"results":"15","hashOfConfig":"10"},{"size":1323,"mtime":1607983208205,"results":"16","hashOfConfig":"10"},{"size":786,"mtime":1607983061818,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1uo6ije",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/kevin.duff/dev/kevban-board/src/index.tsx",[],["38","39"],"/Users/kevin.duff/dev/kevban-board/src/store/reducer.ts",["40","41","42"],"/Users/kevin.duff/dev/kevban-board/src/App.tsx",["43","44","45","46"],"import React from 'react';\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { Issue } from \"./components/Issue\"\nimport { IssueBoard } from './components/IssueBoard';\n\nimport { simulateAssignUser } from \"./store/actionCreators\"\n\n\nconst App: React.FC = () => {\n    const issues: readonly IIssue[] = useSelector(\n        (state: KevbanState) => state.issues,\n        shallowEqual\n    )\n\n    return (\n        <div className=\"App\">\n            <IssueBoard\n                deleteIssue={(issue: IIssue) => null} // TODO\n                assignUser={simulateAssignUser}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","/Users/kevin.duff/dev/kevban-board/src/components/Issue.tsx",[],"/Users/kevin.duff/dev/kevban-board/src/store/actionTypes.ts",[],"/Users/kevin.duff/dev/kevban-board/src/store/actionCreators.ts",[],"/Users/kevin.duff/dev/kevban-board/src/components/IssueBoard.tsx",["47","48","49"],"import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\n\nimport { Divider } from \"@blueprintjs/core\";\n\nimport { IssueLane } from \"./IssueLane\"\n\n\n\ntype Props = {\n    deleteIssue: (issue: IIssue) => void,\n    assignUser: (issue: IIssue, user?: IUser) => void,\n}\n\n\nexport const IssueBoard: React.FC<Props> = ({deleteIssue, assignUser}) => {\n    const issues: readonly IIssue[] = useSelector(\n        (state: KevbanState) => state.issues,\n        shallowEqual\n    )\n    const lanes: readonly ILane[] = useSelector(\n        (state: KevbanState) => state.lanes,\n        shallowEqual\n    )\n\n    const renderLane = (lane: ILane) => {\n        const issuesForLane = issues.filter(\n            (issue: IIssue) => issue.laneName === lane.name\n        )\n        return <IssueLane\n            lane={lane}\n            issues={issuesForLane}\n            deleteIssue={deleteIssue}\n            assignUser={assignUser}\n        />\n    }\n\n    // TODO what if there are no lanes\n    const renderedLanes = lanes.map(\n        (lane: ILane) => (\n            <div>\n                {renderLane(lane)}\n            </div>\n        )\n    )\n\n    return (\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gridGap: 20 }}>{renderedLanes}</div>\n    )\n}\n","/Users/kevin.duff/dev/kevban-board/src/components/IssueLane.tsx",["50","51","52","53"],"import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport { Issue } from \"./Issue\"\n\n\ntype Props = {\n    lane: ILane,\n    issues: IIssue[],\n    deleteIssue: (issue: IIssue) => void,\n    assignUser: (issue: IIssue, user?: IUser) => void,\n}\n\n\nexport const IssueLane: React.FC<Props> = ({lane, issues, deleteIssue, assignUser}) => {\n    const displayIssues = issues.map(\n        (issue: IIssue) => (\n            <Issue\n                key={issue.title}\n                issue={issue}\n                deleteIssue={deleteIssue}\n                assignUser={assignUser}\n            />\n        )\n    )\n\n    return (\n        <div>\n            <h2>{lane.name}</h2>\n            {displayIssues}\n        </div>\n    )\n}\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":53,"column":9,"nodeType":"64","messageId":"65","endLine":53,"endColumn":69},{"ruleId":"62","severity":1,"message":"63","line":77,"column":9,"nodeType":"64","messageId":"65","endLine":77,"endColumn":69},{"ruleId":"58","severity":1,"message":"66","line":2,"column":37,"nodeType":"60","messageId":"61","endLine":2,"endColumn":48},{"ruleId":"58","severity":1,"message":"67","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":18},{"ruleId":"58","severity":1,"message":"68","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":15},{"ruleId":"58","severity":1,"message":"69","line":11,"column":11,"nodeType":"60","messageId":"61","endLine":11,"endColumn":36},{"ruleId":"58","severity":1,"message":"67","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":3,"column":24,"nodeType":"60","messageId":"61","endLine":3,"endColumn":35},{"ruleId":"58","severity":1,"message":"70","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":17},{"ruleId":"58","severity":1,"message":"67","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"58","severity":1,"message":"71","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":22},{"ruleId":"58","severity":1,"message":"66","line":3,"column":24,"nodeType":"60","messageId":"61","endLine":3,"endColumn":35},{"ruleId":"58","severity":1,"message":"72","line":3,"column":37,"nodeType":"60","messageId":"61","endLine":3,"endColumn":48},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'isIP' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'useDispatch' is defined but never used.","'Dispatch' is defined but never used.","'Issue' is defined but never used.","'issues' is assigned a value but never used.","'Divider' is defined but never used.","'shallowEqual' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]