[{"/Users/kevin.duff/dev/kevban-board/src/index.tsx":"1","/Users/kevin.duff/dev/kevban-board/src/store/reducer.ts":"2","/Users/kevin.duff/dev/kevban-board/src/App.tsx":"3","/Users/kevin.duff/dev/kevban-board/src/components/Issue.tsx":"4","/Users/kevin.duff/dev/kevban-board/src/store/actionTypes.ts":"5","/Users/kevin.duff/dev/kevban-board/src/store/actionCreators.ts":"6","/Users/kevin.duff/dev/kevban-board/src/components/IssueBoard.tsx":"7","/Users/kevin.duff/dev/kevban-board/src/components/IssueLane.tsx":"8","/Users/kevin.duff/dev/kevban-board/src/components/ControlBar.tsx":"9"},{"size":577,"mtime":1607955909409,"results":"10","hashOfConfig":"11"},{"size":3328,"mtime":1607987958100,"results":"12","hashOfConfig":"11"},{"size":816,"mtime":1607990482011,"results":"13","hashOfConfig":"11"},{"size":2083,"mtime":1607992530142,"results":"14","hashOfConfig":"11"},{"size":408,"mtime":1607992307868,"results":"15","hashOfConfig":"11"},{"size":1174,"mtime":1607987798020,"results":"16","hashOfConfig":"11"},{"size":1329,"mtime":1607987533598,"results":"17","hashOfConfig":"11"},{"size":792,"mtime":1607987508647,"results":"18","hashOfConfig":"11"},{"size":3019,"mtime":1607992858055,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1uo6ije",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevin.duff/dev/kevban-board/src/index.tsx",[],["43","44"],"/Users/kevin.duff/dev/kevban-board/src/store/reducer.ts",["45","46","47","48"],"import { isIP } from \"net\"\nimport * as actionTypes from \"./actionTypes\"\n\n\nconst initialState: KevbanState = {\n    issues: [\n        {\n            title: \"Create kevban board\",\n            body: \"Create more than a single issue sitting in space\",\n            assigneeName: null,\n            laneName: \"To do\",\n            userLoading: false,\n        },\n        {\n            title: \"Make a billion dollars\",\n            body: \"Get money\",\n            assigneeName: null,\n            laneName: \"To do\",\n            userLoading: false,\n        },\n        {\n            title: \"Learn the basics of React\",\n            body: \"Go through the basics of React, Redux, and TypeScript\",\n            assigneeName: \"Kevin\",\n            laneName: \"In progress\",\n            userLoading: false,\n        },\n    ],\n    users: [\n        {\n            name: \"Kevin\",\n        },\n        {\n            name: \"Gonzo\",\n        },\n    ],\n    lanes: [\n        {\n            name: \"To do\",\n        },\n        {\n            name: \"In progress\",\n        },\n        {\n            name: \"Done\",\n        },\n    ],\n}\n\n\nconst assign_user_requested = (action: KevbanAction, state: KevbanState) => {\n    if ((action.issue === undefined) || action.user === undefined) {\n        throw \"Undefined value encountered in ASSIGN_USER_REQUESTED\"\n    }\n    const newIssues = state.issues.map(\n        (issue: IIssue) => {\n            if (issue.title === action.issue!.title) {\n                return {\n                    ...issue,\n                    userLoading: true,\n                    assigneeName: action.user === null ? null : action.user!.name,\n                }\n            } else {\n                return issue\n            }\n        }\n    )\n    return {\n        ...state,\n        issues: newIssues,\n    }\n}\n\n\nconst assign_user_ok = (action: KevbanAction, state: KevbanState) => {\n    if ((action.issue === undefined) || action.user === undefined) {\n        throw \"Undefined value encountered in ASSIGN_USER_REQUESTED\"\n    }\n    const newIssues = state.issues.map(\n        (issue: IIssue) => {\n            if (issue.title === action.issue!.title) {\n                return {\n                    ...issue,\n                    userLoading: false,\n                }\n            } else {\n                return issue\n            }\n        }\n    )\n    return {\n        ...state,\n        issues: newIssues,\n    }\n}\n\n\nconst create_issue_requested = (action: KevbanAction, state: KevbanState) => {\n    if (action.issue === undefined) {\n        throw \"Undefined issue encountered in CREATE_ISSUE_REQUESTED\"\n    }\n    return {\n        ...state,\n        issues: state.issues.concat([action.issue]),\n    }\n}\n\n\nconst create_issue_ok = (action: KevbanAction, state: KevbanState) => {\n    return state\n}\n\n\nconst reducer = (\n    state: KevbanState = initialState,\n    action: KevbanAction,\n): KevbanState => {\n    switch (action.type) {\n        case actionTypes.ASSIGN_USER_REQUESTED:\n            return assign_user_requested(action, state)\n        case actionTypes.ASSIGN_USER_OK:\n            return assign_user_ok(action, state)\n        case actionTypes.CREATE_ISSUE_REQUESTED:\n            return create_issue_requested(action, state)\n        case actionTypes.CREATE_ISSUE_OK:\n            return create_issue_ok(action, state)\n    }\n    return state\n}\n\nexport default reducer\n","/Users/kevin.duff/dev/kevban-board/src/App.tsx",["49","50","51","52"],"import React from 'react';\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { ControlBar } from './components/ControlBar';\nimport { Issue } from \"./components/Issue\"\nimport { IssueBoard } from './components/IssueBoard';\n\nimport { simulateAssignUser, simulateCreateIssue } from \"./store/actionCreators\"\n\n\nconst App: React.FC = () => {\n    const issues: readonly IIssue[] = useSelector(\n        (state: KevbanState) => state.issues,\n        shallowEqual\n    )\n\n    return (\n        <div className=\"App\">\n            <ControlBar createIssue={simulateCreateIssue}/>\n            <IssueBoard\n                deleteIssue={(issue: IIssue) => null} // TODO\n                assignUser={simulateAssignUser}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","/Users/kevin.duff/dev/kevban-board/src/components/Issue.tsx",["53"],"/Users/kevin.duff/dev/kevban-board/src/store/actionTypes.ts",[],"/Users/kevin.duff/dev/kevban-board/src/store/actionCreators.ts",[],"/Users/kevin.duff/dev/kevban-board/src/components/IssueBoard.tsx",["54","55","56"],"import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\n\nimport { Divider } from \"@blueprintjs/core\";\n\nimport { IssueLane } from \"./IssueLane\"\n\n\n\ntype Props = {\n    deleteIssue: (issue: IIssue) => void,\n    assignUser: (issue: IIssue, user: IUser | null) => void,\n}\n\n\nexport const IssueBoard: React.FC<Props> = ({deleteIssue, assignUser}) => {\n    const issues: readonly IIssue[] = useSelector(\n        (state: KevbanState) => state.issues,\n        shallowEqual\n    )\n    const lanes: readonly ILane[] = useSelector(\n        (state: KevbanState) => state.lanes,\n        shallowEqual\n    )\n\n    const renderLane = (lane: ILane) => {\n        const issuesForLane = issues.filter(\n            (issue: IIssue) => issue.laneName === lane.name\n        )\n        return <IssueLane\n            lane={lane}\n            issues={issuesForLane}\n            deleteIssue={deleteIssue}\n            assignUser={assignUser}\n        />\n    }\n\n    // TODO what if there are no lanes\n    const renderedLanes = lanes.map(\n        (lane: ILane) => (\n            <div>\n                {renderLane(lane)}\n            </div>\n        )\n    )\n\n    return (\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gridGap: 20 }}>{renderedLanes}</div>\n    )\n}\n","/Users/kevin.duff/dev/kevban-board/src/components/IssueLane.tsx",["57","58","59","60"],"import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport { Issue } from \"./Issue\"\n\n\ntype Props = {\n    lane: ILane,\n    issues: IIssue[],\n    deleteIssue: (issue: IIssue) => void,\n    assignUser: (issue: IIssue, user: IUser | null) => void,\n}\n\n\nexport const IssueLane: React.FC<Props> = ({lane, issues, deleteIssue, assignUser}) => {\n    const displayIssues = issues.map(\n        (issue: IIssue) => (\n            <Issue\n                key={issue.title}\n                issue={issue}\n                deleteIssue={deleteIssue}\n                assignUser={assignUser}\n            />\n        )\n    )\n\n    return (\n        <div>\n            <h2>{lane.name}</h2>\n            {displayIssues}\n        </div>\n    )\n}\n","/Users/kevin.duff/dev/kevban-board/src/components/ControlBar.tsx",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":53,"column":9,"nodeType":"73","messageId":"74","endLine":53,"endColumn":69},{"ruleId":"71","severity":1,"message":"72","line":77,"column":9,"nodeType":"73","messageId":"74","endLine":77,"endColumn":69},{"ruleId":"71","severity":1,"message":"72","line":100,"column":9,"nodeType":"73","messageId":"74","endLine":100,"endColumn":70},{"ruleId":"67","severity":1,"message":"75","line":2,"column":37,"nodeType":"69","messageId":"70","endLine":2,"endColumn":48},{"ruleId":"67","severity":1,"message":"76","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":18},{"ruleId":"67","severity":1,"message":"77","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":15},{"ruleId":"67","severity":1,"message":"78","line":12,"column":11,"nodeType":"69","messageId":"70","endLine":12,"endColumn":36},{"ruleId":"67","severity":1,"message":"79","line":5,"column":43,"nodeType":"69","messageId":"70","endLine":5,"endColumn":47},{"ruleId":"67","severity":1,"message":"76","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":18},{"ruleId":"67","severity":1,"message":"75","line":3,"column":24,"nodeType":"69","messageId":"70","endLine":3,"endColumn":35},{"ruleId":"67","severity":1,"message":"80","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":17},{"ruleId":"67","severity":1,"message":"76","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":18},{"ruleId":"67","severity":1,"message":"81","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":22},{"ruleId":"67","severity":1,"message":"75","line":3,"column":24,"nodeType":"69","messageId":"70","endLine":3,"endColumn":35},{"ruleId":"67","severity":1,"message":"82","line":3,"column":37,"nodeType":"69","messageId":"70","endLine":3,"endColumn":48},{"ruleId":"67","severity":1,"message":"81","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":22},{"ruleId":"67","severity":1,"message":"82","line":3,"column":37,"nodeType":"69","messageId":"70","endLine":3,"endColumn":48},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'isIP' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'useDispatch' is defined but never used.","'Dispatch' is defined but never used.","'Issue' is defined but never used.","'issues' is assigned a value but never used.","'Icon' is defined but never used.","'Divider' is defined but never used.","'shallowEqual' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]